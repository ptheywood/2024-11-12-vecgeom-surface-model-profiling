---
title: "VecGeom `surface_model` profiling"
author: 
  - "Peter Heywood, Research Software Engineer"
institute: 
  - "The University of Sheffield"
date: "2024-11-12"
logo: ./img/UOSLogo_Primary_Violet_RGB.svg
footer: "VecGeom `surface_model` profiling - [SWIFT-HEP #8 Joint with ExaTEPP](https://indico.cern.ch/event/1466097/)"

format:
  revealjs:
    theme: theme/tuos.scss
    embed-resources: true  # only enable when publish-ready for perf reasons
    template-partials: 
      - title-slide.html
    # show-notes: separate-page
    slide-number: c
    width: 1050
    height: 700
    margin: 0.1
    min-scale: 0.2
    max-scale: 2.0
    auto-stretch: false
    fontsize: 32px
    navigation-mode: linear
    controls: true
    mouse-wheel: true

# title slide background
title-slide-attributes:
  data-background-color: "#9ADBE8" # $tuos-powder-blue
  # data-background-color: "#D7F1F6" # $tuos-powder-blue-40

---

# Intro/Context {.divider .teal}

<!-- Only 20 mins. -->

## VecGeom `surface_model`

+ https://gitlab.cern.ch/VecGeom/VecGeom
+ `surface_model` 
  + https://gitlab.cern.ch/VecGeom/VecGeom/-/tree/surface_model?ref_type=heads

@todo

## `testRaytracing`

+ @todo Explain the test
+ @todo List some options, incl surface only
+ My (local) additions:
  + [NVTX](https://nvidia.github.io/NVTX/) ranges for profile annotation
  + `-oncpu 0` to disable cpu runs to to simplify profiling

```bash
testRaytracing -gdml_name file.gdml -ongpu 1 -mmunit 0.1 -verbosity 0 \
    -accept_zeros 1 -validate_results 1 -nrays 524228 -use_TB_gun 0   \
    -only_surf 0 -test_bvh 1 -bvh_single_step 1 -bvh_split_step 1     \
    -oncpu 1
```

## `testRaytracing` timeline (`nsys`) {.smalltitle}

![](img/image.png){fig-alt="alt text" width="100%" height="100%"}

<!-- @todo Annotated testRaytracing timeline showing the relevant bits? -->

```bash
testRaytracing -gdml_name file.gdml -ongpu 1 -mmunit 0.1 -verbosity 0     \
    -accept_zeros 1 -validate_results 1 -nrays 524228 -use_TB_gun 0       \
    -only_surf 0 -test_bvh 1 -bvh_single_step 1 -bvh_split_step 1 -oncpu 1
```

## `testRaytracing` timeline (`nsys`) {.smalltitle}

![](img/image.png){fig-alt="alt text" width="100%" height="100%"}

<!-- @todo simplified version -->

```bash
testRaytracing -gdml_name file.gdml -ongpu 1 -mmunit 0.1 -verbosity 0      \
    -accept_zeros 1 -validate_results 0 -nrays 524228  -use_TB_gun 0       \
    -only_surf 1 -test_bvh 1 -bvh_single_step 1 -bvh_split_step 1 -oncpu 0
```

## Hardware 

::: {.center layout="[[-1], [1], [-1]]"}

| GPU       | CC | CPU                  | Cluster                             | Driver       |
|:----------|----|:---------------------|:------------------------------------|:-------------|
| V100 SXM2 | 70 | Intel Xeon Gold 6138 | [TUoS Bessemer][bessemer-gpu-specs] | `550.127.05` |
| A100 SXM4 | 80 | AMD EPYC 7413        | [TUoS Stanage][stanage-gpu-specs]   | `550.127.05` |
| H100 PCIe | 90 | AMD EPYC 7413        | [TUoS Stanage][stanage-gpu-specs]   | `550.127.05` |
| GH200     | 90 | Nvidia Grace         | [N8CIR Bede][bede-gpu-specs]        | `560.35.03`  |

: {.striped .table-full-width}

:::

[bessemer-gpu-specs]: https://docs.hpc.shef.ac.uk/en/latest/bessemer/cluster_specs.html#gpu-node-specifications
[stanage-gpu-specs]: https://docs.hpc.shef.ac.uk/en/latest/stanage/cluster_specs.html#gpu-nodes
[bede-gpu-specs]: https://bede-documentation.readthedocs.io/en/latest/hardware/index.html

## Geometries

::: {.center layout="[[-1], [1], [-1]]"}

| Geometry                                                                 | Touchables |
|:-------------------------------------------------------------------------|-----------:|
| [`trackML.gdml`][trackML.gdml]                                           |    `18790` |
| [`TBHGCal181Oct_fixdup.gdml`][TBHGCal181Oct_fixdup.gdml]                 |    `61802` |
| [`cms2026D110DD4hep_fix.gdml`][cms2026D110DD4hep_fix.gdml]               | `13133900` |
| [`LHCb_Upgrade_onlyECALandHCAL.gdml`][LHCb_Upgrade_onlyECALandHCAL.gdml] | `18429884` |

: {.striped .table-full-width}

:::

[trackML.gdml]: https://gitlab.cern.ch/VecGeom/VecGeom/-/blob/master/test/gdml/gdmls/trackML.gdml?ref_type=heads
[TBHGCal181Oct_fixdup.gdml]: https://cern-my.sharepoint.com/:u:/g/personal/severin_diederichs_cern_ch/EWFFpWCW4GpOhJgQfBaZTVkBjsjHke93QO7Em3TrK_GkFg
[cms2026D110DD4hep_fix.gdml]: https://cern-my.sharepoint.com/:u:/g/personal/severin_diederichs_cern_ch/EfTefx_Me71Gs37_h-nuaTQB_8lqNsCMSz9kNmQOpEl2sA
[LHCb_Upgrade_onlyECALandHCAL.gdml]: https://cern-my.sharepoint.com/:u:/g/personal/severin_diederichs_cern_ch/EWdDg95YWNNOuznQ9DnrfMUBmQrT9Akp2ixUPBuhGIdQww

# Profiling {.divider .teal}

## `PropagateRaysSurf`

## `PropagateRaysSurfBVH`

## Register Pressure is the main problem

## Streaming Multiprocessor, Residency, Occupancy, Registers file

## Register limit

## `PropagateRaysSurfBVHSingle`

## `ComputeNextStepAndNextSurfaces` + `LocateSurf`

## Mixed Precision Mode

`testRaytracing.h`

```c++
using Real_t = float;
```

+ Experimental
+ Assertions triggered by many geometries
+ @todo - apparent hanging?
+ Unintentionally created a 1.3TB log file...

## Impact of Mixed Precision

+ Less data to read, move and store
+ More FP32 units
+ Reduces Register pressure
  + @todo - number.

+ @todo - change in runtime not significant for the base kernel

# Benchmarking {.divider .teal}

## Per Model or Per kernel?

@todo decide

## TrackML

## LHcb Update

## CMS2026

## HGCal

@todo

# Thank you {.divider .flamingo}

# Additional Slides {.divider .coral visibility="uncounted" data-hide-slide-number='true'}

## CMake Configuration

```bash
cmake -S . -B build \ 
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_CUDA_ARCHITECTURES="70;80;90" \
      -DVECGEOM_ENABLE_CUDA=ON -DVECGEOM_GDML=ON \
      -DBACKEND=Scalar -DVECGEOM_USE_NAVTUPLE=ON \
      -DVECGEOM_BVH_SINGLE=ON -DVECGEOM_BUILTIN_VECCORE=ON
```

<!-- 
# Templates {.divider .flamingo visibility="uncounted" data-hide-slide-number='true'}


::: {.plug}

Sample plug 

[https://github.com/ptheywood](https://github.com/ptheywood)

:::


## Screnshot slide {.smalltitle}

![](img/image.png){fig-alt="alt text" width="100%" height="100%"}

## columns 


:::: {.columns}

::: {.column width="50%"}

+ column
+ one

```{.bash}
#! /usr/bin/env bash
echo "regular"
```

:::

::: {.column width="50%"}

+ column
+ two

```{.bash .bigger}
#! /usr/bin/env bash
echo "bigger"
```

:::

:::: -->
